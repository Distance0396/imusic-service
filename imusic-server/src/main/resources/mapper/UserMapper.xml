<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.distance0.imusic.mapper.UserMapper">

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
    insert into user (name, account, password, phone, avatar, status, email, sex, create_time, open_id) values
             (#{name},#{account},#{password},#{phone},#{avatar},#{status},#{email},#{sex},#{createTime},#{openId})
    </insert>


    <select id="getUser" resultType="com.distance0.imusic.entity.User">
        select id, name, account, password, phone, avatar, email, sex, create_time from user
        <where>
            <if test="id != null">
                id = #{id}
            </if>
            <if test="name != null">
                and name = #{name}
            </if>
            <if test="account != null">
                and account = #{account}
            </if>
            <if test="password != null">
                and password = #{password}
            </if>
            <if test="phone != null">
                and phone = #{phone}
            </if>
            <if test="avatar != null">
                and avatar = #{avatar}
            </if>
            <if test="email != null">
                and email = #{email}
            </if>
            <if test="sex != null">
                and sex = #{sex}
            </if><if test="createTime != null">
                and create_time = #{createTime}
            </if>
        </where>
    </select>

    <select id="getSingerById" resultType="String">
        select name from singer where id = #{asinger_id}
    </select>

    <select id="getUserById" resultType="String">
        select name from user where id = #{muser_id}
    </select>


    <resultMap id="getMusicFormByUserId" type="com.distance0.imusic.vo.CollectFormVo">
        <collection property="musicFormList" javaType="java.util.List" ofType="com.distance0.imusic.vo.MusicFormSimpleVo">
            <id column="mid" property="id" />
            <result column="mname" property="name" />
            <result column="mimage" property="image" />
            <association column="muser_id" property="architect" select="getUserById"/>
        </collection>
        <collection property="singerList" javaType="java.util.List"  ofType="com.distance0.imusic.vo.SingerSimpleVo">
            <id column="sid" property="id" />
            <result column="sname" property="name" />
            <result column="simage" property="image" />
            <result column="scolor" property="color" />
            <result column="savatar" property="avatar" />
        </collection>
        <collection property="albumList" javaType="java.util.List" ofType="com.distance0.imusic.vo.AlbumSimpleVo">
            <id column="aid" property="id" />
            <result column="aname" property="name" />
            <result column="aimage" property="image" />
            <result column="acolor" property="color" />
            <result column="asinger_id" property="singerId" />
<!--            <result column="singer_name" property="singerName" />-->
            <association column="asinger_id" property="singerName" select="getSingerById"/>
        </collection>
    </resultMap>
    <select id="getCollectForm" resultMap="getMusicFormByUserId" >
        select
            mf.id as mid,
            mf.name as mname,
            mf.user_id as muser_id,
            mf.image as mimage,
            s.id as sid,
            s.name as sname,
            s.image as simage,
            s.color as scolor,
            s.avatar as savatar,
            a.id as aid,
            a.name as aname,
            a.image as aimage,
            a.color as acolor,
            a.singer_id as asinger_id
         from collect_form cf
         left join singer s on s.id = cf.singer_id
         left join music_form mf on mf.id = cf.music_form_id
         left join album a on a.id = cf.album_id
        where cf.user_id = 1;
    </select>
</mapper>
